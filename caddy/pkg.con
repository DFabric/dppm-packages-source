package     "caddy"
name        "Caddy"
type        "HTTP"
license     "Apache-2.0"
url         "https://caddyserver.com"
docs        "https://caddyserver.com/docs"
description "Fast, cross-platform HTTP/2 web server with automatic HTTPS"
info        "Includes auto SSL/TLS certificates with Let's Encrypt"
shared       true

version {
  self {
    src   "https://github.com/mholt/caddy/ref-list/master?source_action=disambiguate&source_controller=files"
    regex "(?<=title=\"v)[0-9.]+(?=\")"
  }
  linux {
    armv5    nil
    armv6    nil
    armhf    nil
    mips     nil
    mips64   nil
    mips64le nil
    ppc64    nil
    ppc64le  nil
    x86      nil
    x86-64   nil
  }
  freebsd {
    armv6  nil
    armhf  nil
    x86    nil
    x86-64 nil
  }
  openbsd {
    armv6  nil
    armhf  nil
    x86    nil
    x86-64 nil
  }
  dragonflybsd {
    x86-64 nil
  }
  solaris {
    x86-64 nil
  }
}
tags {
  latest {
    src   "https://github.com/mholt/caddy/releases/latest"
    regex "(?<=tag/v).*(?=\">)"
  }
}
exec {
  start  "app/caddy -log stdout -agree=true -conf=conf/Caddyfile -root=data"
  reload "USR1"
  check  "app/caddy validate -log stdout -conf=conf/Caddyfile"
}
env {
  CADDYPATH "conf/cert"
}
aliases {
  x86    "386"
  x86-64 "amd64"
}
tasks {
  build [
    "mkdir_p tmp app conf/cert"
    "getfile https://caddyserver.com/download/${KERNEL}/${ARCH_ALIAS}?license=personal tmp/caddy.tar.gz"
    "untar_gz tmp/caddy.tar.gz tmp"
    "mv tmp/caddy app/caddy"
    "rm_r tmp"

    "if root_user? == true" [
      # Give the caddy binary the ability to bind to privileged ports (e.g. 80, 443) as a non-root user
      "setcap CAP_NET_BIND_SERVICE=+ep ${BASEDIR}/app/caddy"
    ]
  ]
}
